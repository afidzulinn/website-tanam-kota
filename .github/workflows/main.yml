name: Docker CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to DigitalOcean
        env:
          HOST: ${{ secrets.DIGITALOCEAN_HOST }}
          USER: root
          PASS: ${{ secrets.DIGITALOCEAN_ROOT_PASSWORD }}
          IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
        run: |
          sudo apt-get install -y sshpass
          sshpass -p "$PASS" ssh -o StrictHostKeyChecking=no $USER@$HOST << EOF
            docker pull $IMAGE
            docker stop website-container || true
            docker rm website-container || true
            docker run -d --name website-container -p 8080:80 $IMAGE
          EOF

      - name: Invoke Portainer webhook
        uses: distributhor/workflow-webhook@v3
        env:
          webhook_url: ${{ secrets.PORTAINER_WEBHOOK_URL }}
